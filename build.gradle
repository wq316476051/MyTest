// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.50'

    ext {
        compileSdkVersion = 28
        minSdkVersion = 24
        targetSdkVersion = 28
        versionCode = 1
        versionName = "1.0"
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"

        gradle_version = "3.5.0"
        kotlin_version = "1.3.50"
        coroutines_version = "1.3.3"
        anko_version = "0.10.8"
        lifecycle_version = "2.1.0"
//        lifecycle_version = "2.2.0-alpha05"

        dependencies = [
                appcompat                 : "androidx.appcompat:appcompat:1.1.0",
                core_ktx                  : "androidx.core:core-ktx:1.1.0",
                constraintlayout          : "androidx.constraintlayout:constraintlayout:1.1.3",
                material_design           : "com.google.android.material:material:1.0.0",

                support_v4                : "androidx.legacy:legacy-support-v4:1.0.0",
                viewpager                 : "androidx.viewpager:viewpager:1.0.0",
                viewpager2                : "androidx.viewpager2:viewpager2:1.0.0",
                recyclerview              : "androidx.recyclerview:recyclerview:1.0.0",
                cardview                  : "androidx.cardview:cardview:1.0.0",
                // alternately - if using Java8, use the following instead of lifecycle-compiler

                lifecycle_extensions      : "androidx.lifecycle:lifecycle-extensions:$lifecycle_version", // ViewModel and LiveData
                lifecycle_viewmodel       : "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version", // alternatively - just ViewModel
                lifecycle_livedata        : "androidx.lifecycle:lifecycle-livedata:$lifecycle_version", // alternatively - just LiveData
                lifecycle_common_java8    : "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version",
                lifecycle_livedata_ktx    : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",
//                lifecycle_runtime_ktx     : "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version",
                // optional - ReactiveStreams support for LiveData
                lifecycle_reactivestreams : "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version",

                // kotlin
                lifecycle_viewmodel_ktx   : "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0",
                kotlin_stdlib_jdk8        : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
//                kotlinx_coroutines_core : 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3',
                kotlinx_coroutines_android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version",

//                anko:  "org.jetbrains.anko:anko:$anko_version", // all
                anko_commons              : "org.jetbrains.anko:anko-commons:$anko_version",
                anko_sqlite               : "org.jetbrains.anko:anko-sqlite:$anko_version",

                easypermissions           : "pub.devrel:easypermissions:3.0.0",
                gson                      : "com.google.code.gson:gson:2.4",

                // test
                junit                     : 'junit:junit:4.12',

                // androidTest
                runner                    : 'androidx.test.ext:junit:1.1.1',
                espresso_core             : 'androidx.test.espresso:espresso-core:3.2.0',
                espresso_intents          : 'androidx.test.espresso:espresso-intents:3.2.0',
        ]
    }

    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
